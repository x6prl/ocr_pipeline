# === Основные Пути ===
input_dir: "input_data"     # Директория с входными файлами (JPG, PNG, PDF)
output_dir: "output_data"   # Директория для сохранения результатов (JSON)
output_format: "json"       # Формат выходных файлов (пока только json)

# === Настройки Tesseract OCR ===
# Tesseract должен быть установлен в системе
tesseract_cmd: null         # Оставьте null, если tesseract в системном PATH.
                            # Иначе укажите полный путь, например: '/usr/bin/tesseract'
tessdata_dir: "tessdata_best/"          # Путь к директории с .traineddata файлами.
                            # Если null, используется системная.
                            # РЕКОМЕНДАЦИЯ: Скачайте модели 'rus.traineddata' (и 'eng' если нужно)
                            # из репозитория tessdata_best https://github.com/tesseract-ocr/tessdata_best
                            # и укажите путь к папке, куда их положили, например: "tessdata/"
ocr_language: "rus"         # Язык(и) для распознавания. 'rus' или 'rus+eng'.
ocr_config: "--psm 3 --oem 1" # Дополнительные параметры Tesseract:
                            # --psm 3: Автоматическое определение сегментации страницы (хорошо для старта).
                            #          Можно пробовать 11 (разреженный текст) или 1 (авто с OSD).
                            # --oem 1: Использовать LSTM движок (лучший для Tesseract 4/5).

# === Настройки Обработки PDF ===
pdf_dpi: 300                # Разрешение для конвертации PDF в изображение.
                            # 300 - хороший баланс качества и размера. Можно увеличить до 600, если текст мелкий.

# === Настройки Предобработки Изображений (Критично для Фото!) ===
preprocessing:
  enabled: true             # Включить предобработку. ОБЯЗАТЕЛЬНО для фото!

  # --- Основные шаги ---
  grayscale: true           # Преобразовать в оттенки серого. Почти всегда улучшает OCR.
  deskew: true              # Автоматическое выравнивание ОБЩЕГО наклона документа.
                            # Помогает, но не исправляет локальные изгибы листа.

  binarization_method: "adaptive" # Метод преобразования в ч/б:
                            # 'adaptive' - Адаптивный порог. ЛУЧШЕ для фото с неравномерным освещением.
                            # 'otsu'     - Глобальный порог Оцу. Хорошо для сканов, хуже для фото.
                            # null       - Не бинаризировать. Иногда Tesseract 4+ лучше работает с grayscale.
                            # РЕКОМЕНДАЦИЯ: Начать с 'adaptive', если плохо - попробовать null.
  adaptive_thresh_block_size: 15 # (Только для adaptive) Размер блока для адаптивного порога.
                                 # Должен быть нечетным. Подбирается экспериментально (11, 15, 21...).
  adaptive_thresh_C: 5           # (Только для adaptive) Константа, вычитаемая из среднего.
                                 # Подбирается экспериментально (2, 5, 7...).

  noise_removal: "median_3"  # Метод удаления шума:
                             # 'median_3' или 'median_5' - Медианный фильтр (ядро 3x3 или 5x5). Хорошо от импульсного шума ("соль и перец").
                             # null - не удалять шум.
                             # РЕКОМЕНДАЦИЯ: Начать с 'median_3'.

  # --- Дополнительные опции (могут требовать тюнинга или более сложной логики) ---
  # perspective_correction: false # Попытка исправить искажения перспективы (изгибы).
                                  # ТРЕБУЕТ значительного усложнения image_processor.py (поиск контуров листа).
                                  # Пока не реализовано, оставлено как идея.

  # crop_to_content: false        # Попытка обрезать изображение до границ документа (убрать пальцы, стол).
                                # ТРЕБУЕТ доработки image_processor.py (поиск контуров листа).
                                # Пока не реализовано, оставлено как идея.

# === Настройки Постобработки Текста ===
postprocessing:
  enabled: true             # Включить базовую очистку текста (удаление пустых строк, лишних пробелов).
  # Тут можно будет добавить правила замен, если понадобятся:
  # custom_replacements:
  #   - [" | ", " I "] # Пример замены (нужно делать осторожно)

# === Настройки Логирования ===
logging:
  level: "INFO"             # Уровни: DEBUG, INFO, WARNING, ERROR, CRITICAL
                            # Для отладки ставьте DEBUG.
  log_file: "ocr_pipeline.log" # Имя файла лога (в корне проекта). null - не писать в файл.
  log_to_console: true      # Выводить ли логи в консоль.